<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Xin Xie&#39;s Personal Website</title>
    <link>https://xiexinyls.github.io/xxsite/</link>
    <description>Recent content in Home on Xin Xie&#39;s Personal Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Feb 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xiexinyls.github.io/xxsite/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Test</title>
      <link>https://xiexinyls.github.io/xxsite/test/</link>
      <pubDate>Sun, 01 Oct 2017 01:51:59 -0400</pubDate>
      
      <guid>https://xiexinyls.github.io/xxsite/test/</guid>
      <description>$x_1=z$
$$ P^1_2 = z_{1}^{2}$$
Hi, $ P^j_2 = z_{1}^{2}$.</description>
    </item>
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>https://xiexinyls.github.io/xxsite/post/2016/02/14/a-plain-markdown-post/</link>
      <pubDate>Sun, 14 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://xiexinyls.github.io/xxsite/post/2016/02/14/a-plain-markdown-post/</guid>
      <description>This sample post is mainly for blogdown users. If you do not use blogdown, you can skip the first section.
1. Markdown or R Markdown This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
 You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.</description>
    </item>
    
    <item>
      <title>Lorem Ipsum</title>
      <link>https://xiexinyls.github.io/xxsite/post/2015/07/23/lorem-ipsum/</link>
      <pubDate>Thu, 23 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://xiexinyls.github.io/xxsite/post/2015/07/23/lorem-ipsum/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
Quisque mattis volutpat lorem vitae feugiat.</description>
    </item>
    
    <item>
      <title>About Hugo XMin</title>
      <link>https://xiexinyls.github.io/xxsite/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xiexinyls.github.io/xxsite/about/</guid>
      <description>XMin is the first Hugo theme I have designed. The original reason that I wrote it was I needed a minimal example of Hugo themes when I was writing the blogdown book. Basically I wanted a simple theme that supports a navigation menu, a home page, other single pages, lists of pages, blog posts, categories, tags, and RSS. That is all. Nothing fancy. In terms of CSS and JavaScript, I really want to keep them minimal.</description>
    </item>
    
    <item>
      <title>CV</title>
      <link>https://xiexinyls.github.io/xxsite/cv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xiexinyls.github.io/xxsite/cv/</guid>
      <description>I am currently a Research Data Scientist in RBC Capital Markets US research department.
 December 2018 - Present, Research Data Scientist, New York City, New York, RBC Capital Markets January 2018 - October 2018, Machine Learning Engineer, New York City, New York, Urbint June 2017 - August 2017, Advanced Analystics Intern, Harford, Connecticut, Travelers June 2016 - October 2016, Data Scientist Intern, Jersey City, New Jersey, Verisk Analytics  Research Interests  Climate Model Evaluation and Diagnostics Scale-aware Cloud Representation in Climate Model Convection Parameterization in Climate Model  Education  Ph.</description>
    </item>
    
    <item>
      <title>Data Science Notes</title>
      <link>https://xiexinyls.github.io/xxsite/datasci/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xiexinyls.github.io/xxsite/datasci/</guid>
      <description>I have summarized some useful notes covering several machine learning and data mining subjects. These materials are written in a way that is easy to pick up if you have experience in these areas. Some data analysis coding pieces are also provided for quick coding practice.
My Data Science Projects  Driver Telematics Analysis from Kaggle  Four Steps of Data Analysis  Collecting Data   Data Manipulation using numpy SQL Quick Reference Data Cleaning using pandas/numpy?</description>
    </item>
    
    <item>
      <title>ggplot2 in R</title>
      <link>https://xiexinyls.github.io/xxsite/ds/ggplot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xiexinyls.github.io/xxsite/ds/ggplot/</guid>
      <description>The basic grammar to call ggplot2 in R is as the following form
ggplot(data=dfname, aes(x=varname1, y=varname2) ) + geom_&amp;lt;geom type&amp;gt;( aes(blabla) ) + theme()  The link between data and figure is established by specifying an &amp;ldquo;aethetic&amp;rdquo; (an aes object with some input arguments). The previous specification can be seen as base and later graphic elements will be overlapped to the base adopting or overwriteing the pevious aesthetic specification. For example, if you specify the data argument in the first ggplot function, you dont&amp;rsquo; have to specify data argument for geom_&amp;lt;geom type&amp;gt; again because of this automatic applying rule.</description>
    </item>
    
    <item>
      <title>How to Read Data using Python?</title>
      <link>https://xiexinyls.github.io/xxsite/ds/py-read-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xiexinyls.github.io/xxsite/ds/py-read-data/</guid>
      <description>Read From Text File Suppose we have an example data file
symbol,date,time,high,low appl,20000101,15:00,100.1,90.5 appl,20000102,15:00,100.1,90.5 intc,20000101,15:00,30.1,28.5 Use Python Built-in I/O If the csv data file is clean and ready to be used (pure numeric, no delimiter messing up, no quote problem), we can use the simple Python I/O interface to read it.
Method One: Loop the data file line by line. This method is more efficient and recommended. &amp;ldquo;line&amp;rdquo; is a string.</description>
    </item>
    
    <item>
      <title>Project for the Data Incubator Program</title>
      <link>https://xiexinyls.github.io/xxsite/ds/dataincu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xiexinyls.github.io/xxsite/ds/dataincu/</guid>
      <description>As data science develops dramatically these years, many financial institutes have used the latest methods and techniques to find patterns in the financial dataset and to guide their investment. Very few individual investor is able to apply these institute strategy because they lack of hardware. For example, in the stock market, the high-frequency trading methods require very high speed connection to the New York Stock Exchange server and very low transaction fee but individual doesn&amp;rsquo;t have these advantages.</description>
    </item>
    
  </channel>
</rss>